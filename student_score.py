# -*- coding: utf-8 -*-
"""Student Score.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1WGBQrWYhaEAyWM3GNYf4AyOE4mp9Cy--
"""

!pip install numpy
!pip install pandas
!pip install matplotlib
!pip install seaborn

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

df = pd.read_csv("Sample_Data.csv")

print(df.head())

df.describe()

df.info()

df.isnull().sum()

plt.figure(figsize=(4,4))
ax = sns.countplot(data=df,x="Gender",color='#F3C583')
ax.bar_label(ax.containers[0])
plt.show()

gb= df.groupby("ParentEduc").agg({"MathScore":'mean',"ReadingScore":'mean',"WritingScore":'mean'})
print(gb)

plt.figure(figsize=(5,5))
sns.heatmap(gb,annot=True)
plt.show()

gb= df.groupby("ParentMaritalStatus").agg({"MathScore":'mean',"ReadingScore":'mean',"WritingScore":'mean'})
print(gb)

plt.figure(figsize=(5,5))
sns.heatmap(gb,annot=True)
plt.show()

plt.figure(figsize=(5,5))
sns.boxplot(data=df, x= "MathScore")
plt.show()

plt.figure(figsize=(5,5))
sns.boxplot(x='Gender', y='MathScore', data=df )
plt.title('MathScore according to Gender')
plt.show()

plt.figure(figsize=(5, 5))
sns.boxplot(x='Gender', y='ReadingScore', data=df)
plt.title('Reading Scores by Gender')
plt.show()

plt.figure(figsize=(6, 6))
sns.boxplot(x='Gender', y='WritingScore', data=df)
plt.title('Writing Scores by Gender')
plt.show()

plt.figure(figsize=(6, 6))
sns.barplot(x='ParentEduc', y='MathScore', data=df, color = '#BD4291')
plt.title('Average Math Score by Parental Education Level')
plt.show()

plt.figure(figsize=(5,5))
sns.histplot(df['MathScore'], kde=True, bins=10, color='red')
plt.title('Distribution of Math Scores')
plt.show()

plt.figure(figsize=(5,5))
sns.histplot(df['WritingScore'], kde=True, bins=10, color='#DA7297')
plt.title('Distribution of Writing Scores')
plt.show()

plt.figure(figsize=(5,5))
sns.violinplot(x='Gender', y='ReadingScore', data=df, palette='viridis')
plt.title('Reading Scores by Gender')
plt.show()

sns.pairplot(df[['MathScore', 'ReadingScore', 'WritingScore']], palette='husl')
plt.suptitle('Pair Plot of Scores', y=1.02)
plt.show()

plt.figure(figsize=(4,4))
sns.countplot(x='Gender', data=df, palette='Set3')
plt.title('Count of Students by Gender')
plt.show()

plt.figure(figsize=(6, 6))
sns.boxenplot(x='TestPrep', y='MathScore', data=df, palette='muted')
plt.title('Math Scores by Test Preparation')
plt.show()

plt.figure(figsize=(4,4))
sns.lineplot(x='WklyStudyHours', y='ReadingScore', data=df, color='#BABD42')
plt.title('Reading Scores vs Weekly Study Hours')
plt.show()

plt.figure(figsize=(3,3))
sns.lineplot(x='WklyStudyHours', y='WritingScore', data=df, color='#A03C78')
plt.title('Writing Scores vs Weekly Study Hours')
plt.show()

plt.figure(figsize=(4,4))
sns.stripplot(x='TransportMeans', y='WklyStudyHours', data=df, jitter=True, palette='Set2')
plt.title('Weekly Study Hours by Transport Means')
plt.show()

plt.figure(figsize=(5,5))
sns.barplot(x='ParentEduc', y='MathScore', data=df, ci=None, palette='cubehelix')
plt.title('Average Math Score by Parental Education Level')
plt.show()

plt.figure(figsize=(5,5))
sns.barplot(x='ParentEduc', y='ReadingScore', data=df, ci=None, palette='ch:s=-.2,r=.6')
plt.title('Average Reading Score by Parental Education Level')
plt.show()

plt.figure(figsize=(5,5))
sns.barplot(x='ParentEduc', y='WritingScore', data=df, ci=None, palette='rocket')
plt.title('Average Writing Score by Parental Education Level')
plt.show()

plt.figure(figsize=(5,5))
sns.scatterplot(x='WklyStudyHours', y='MathScore', data=df, color='#43766C')
plt.title('Math Scores vs Weekly Study Hours')
plt.show()

plt.figure(figsize=(5, 5))
sns.scatterplot(x='WklyStudyHours', y='ReadingScore', data=df, color='#76453B')
plt.title('Reading Scores vs Weekly Study Hours')
plt.show()

plt.figure(figsize=(4,4))
sns.scatterplot(x='WklyStudyHours', y='WritingScore', data=df, color='#7A316F')
plt.title('Writing Scores vs Weekly Study Hours')
plt.show()

plt.figure(figsize=(4,4))
df['Gender'].value_counts().plot.pie(autopct='%1.1f%%', colors=['#CD6688', '#609EA2'])
plt.title('Distribution of Students by Gender')
plt.ylabel('')
plt.show()

plt.figure(figsize=(4,4))
df['LunchType'].value_counts().plot.pie(autopct='%1.1f%%', colors=sns.color_palette('Pastel1'))
plt.title('Distribution of Students by Lunch Type')
plt.ylabel('')
plt.show()

plt.figure(figsize=(4,4))
df['TestPrep'].value_counts().plot.pie(autopct='%1.1f%%', colors=['#C98474', '#FFC54D'])
plt.title('Distribution of Students by Test Preparation')
plt.ylabel('')
plt.show()

plt.figure(figsize=(4,4))
df['EthnicGroup'].value_counts().plot.pie(autopct='%1.1f%%', colors=sns.color_palette('rocket'))
plt.title('Distribution of Students by Ethnic Group')
plt.ylabel('')
plt.show()

plt.figure(figsize=(4,4))
df['LunchType'].value_counts().plot.pie(autopct='%1.1f%%', colors=sns.color_palette('Pastel1'))
plt.title('Distribution of Students by Lunch Type')
plt.ylabel('')
plt.show()

# Calculate average scores by ethnic group
avg_scores_by_ethnic_group = df.groupby('EthnicGroup')[['MathScore', 'ReadingScore', 'WritingScore']].mean()
print(avg_scores_by_ethnic_group)

# Calculate the correlation between number of siblings and scores
correlation_siblings_scores = df[['NrSiblings', 'MathScore', 'ReadingScore', 'WritingScore']].corr()
print(correlation_siblings_scores)

# Calculate the proportion of students participating in test preparation by parental education level
test_prep_by_parent_educ = df.groupby('ParentEduc')['TestPrep'].value_counts(normalize=True).unstack().fillna(0)
print(test_prep_by_parent_educ)

avg_scores_by_ethnic_group.plot(kind='bar', figsize=(6, 6), color=['#508D4E', '#D6EFD8', '#B99470'])
plt.title('Average Scores by Ethnic Group')
plt.xlabel('Ethnic Group')
plt.ylabel('Average Score')
plt.legend(['Math Score', 'Reading Score', 'Writing Score'])
plt.show()

plt.figure(figsize=(4,4))
sns.heatmap(correlation_siblings_scores, annot=True, cmap='coolwarm', linewidths=0.5)
plt.title('Correlation Between Number of Siblings and Scores')
plt.show()

test_prep_by_parent_educ.plot(kind='bar', stacked=True, figsize=(6,6), color=['#B3A398', '#944E63'])
plt.title('Test Preparation by Parental Education Level')
plt.xlabel('Parental Education Level')
plt.ylabel('Proportion')
plt.legend(['Not Participated', 'Participated'])
plt.show()

import seaborn as sns
import matplotlib.pyplot as plt

# Set the style
sns.set(style="whitegrid")

# Create a violin plot for Math scores by ethnic group, parental education, and test preparation
plt.figure(figsize=(14, 8))
sns.violinplot(x='EthnicGroup', y='MathScore', hue='TestPrep', data=df, split=True, palette='Set1', inner='quartile')

# Add titles and labels
plt.title('Math Scores by Ethnic Group and Test Preparation', fontsize=16)
plt.xlabel('Ethnic Group', fontsize=14)
plt.ylabel('Math Score', fontsize=14)
plt.legend(title='Test Preparation', loc='upper right')

# Show the plot
plt.show()

